#!/bin/bash
if [ $# -ne $number ]
then
#set($listValues = "" )
#foreach( $input in $inputList)
#set($listValues = "$listValues <$input.name>" )
#end
#foreach( $output in $outputList)
#set($listValues = "$listValues <$output.name>" )
#end
echo "usage: $0 $listValues"
exit 1
fi

DOCKER_IMAGE=$dockerImage
#set($i =$0 )
#foreach( $input in $inputList)
#set($i =$i +1 )
PARAM${i}KEY="$input.commandLineKey"
PARAM${i}VALUE="$${i}"
#set($commandLine =$commandLine.replace("$input.commandLineKey","$$i"))
#end

#foreach( $output in $outputList)
#set($i =$i +1 )
#if(!$output.commandLineKey.equals(""))
PARAM${i}KEY="$output.commandLineKey"
PARAM${i}VALUE="$${i}"
#set($commandLine =$commandLine.replace("$output.commandLineKey","$$i"))
#end
#end


#foreach( $output in $outputList )
 #if($output.cardinality=="Multiple" ) 
     #set($in ="")   
        #set($k ="$output.valueTemplate")
        #set($i =0)
         #foreach( $input in $inputList ) 
          #set($i =$i + 1  )
          #if($output.valueTemplate.contains($input.commandLineKey))
           #set($key = $input.commandLineKey)
            #if($input.type=="LFN" )
             #set ($r = "$dir${i}/$na${i}")
             #set ($in = "$in${i}")
            #else 
             #set ($r = "$na${i}") 
            #end
          #end
          #set ($k ="$k.replace($key,$r)")   
         #end
tar cvzf $in $k
 #end 
 #end 
     
cat << DOCKERJOB > .dockerjob.sh
#!/bin/bash
$commandLine
DOCKERJOB
chmod 755 .dockerjob.sh 

docker run -v $PWD:/gasw-execution-dir -v $PWD/../cache:$PWD/../cache -w /gasw-execution-dir $dockerImage  ./.dockerjob.sh 

if [ $? != 0 ]
then
    echo "Application execution failed!"
    exit 1
fi
echo "Execution of VIP wrapper script in Docker container completed."
